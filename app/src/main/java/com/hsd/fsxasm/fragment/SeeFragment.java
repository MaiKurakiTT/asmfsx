package com.hsd.fsxasm.fragment;import android.content.Intent;import android.graphics.Color;import android.opengl.Visibility;import android.os.Handler;import android.support.v4.view.PagerAdapter;import android.support.v4.view.ViewPager;import android.support.v4.view.ViewPager.OnPageChangeListener;import android.view.View;import android.view.ViewGroup;import android.view.ViewTreeObserver.OnGlobalLayoutListener;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.GridView;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.RelativeLayout;import android.widget.Toast;import android.widget.ImageView.ScaleType;import com.hsd.fsxasm.R;import com.hsd.fsxasm.activity.HeartBeatListActivity;import com.hsd.fsxasm.adapter.NineGridAdapter;import com.hsd.fsxasm.adapter.SeeViewPagerAdapter;import com.hsd.fsxasm.base.BaseFragment;import com.hsd.fsxasm.global.TempInfo;import com.hsd.fsxasm.utils.LogUtil;import com.umeng.comm.core.CommunitySDK;import com.umeng.comm.core.beans.CommUser;import com.umeng.comm.core.constants.ErrorCode;import com.umeng.comm.core.impl.CommunityFactory;import com.umeng.comm.core.login.LoginListener;import com.umeng.comm.core.utils.Log;public class SeeFragment extends BaseFragment {	private GridView gridView;		private Handler mHandler;	private CommunitySDK mCommSDK = null;	/**	 * 九宫格的每个item的图片id	 */	private static int[] ids = { R.drawable.ninebutton0,			R.drawable.ninebutton8, R.drawable.ninebutton2,			R.drawable.ninebutton3, R.drawable.ninebutton5,			R.drawable.ninebutton4, R.drawable.ninebutton6,			R.drawable.ninebutton1, R.drawable.ninebutton7 };	/**	 * 九宫格的每个item的name	 */	private String[] names = { "心动好友", "个人中心", "约会", "旅游", "恋爱秘籍", "星座物语",			"我的消息", "秀一秀", "朋友圈" };		private static int[] photos = {R.drawable.ic_test111_0, R.drawable.ic_test111_1,R.drawable.ic_test111_2,R.drawable.ic_test111_3,R.drawable.ic_test111_4};		private ViewPager viewPager;	private LinearLayout llPointGroup;		@Override	protected View initViews() {		// TODO Auto-generated method stub				LogUtil.info("SeeFragment", "initViews");		View parent = View.inflate(mActivity, R.layout.il_see, null);		gridView = (GridView) parent.findViewById(R.id.id_see_gv);		gridView.setAdapter(new NineGridAdapter(mActivity, ids, names));		viewPager = (ViewPager) parent.findViewById(R.id.il_see_viewpager);		viewPager.setAdapter(new SeeViewPagerAdapter(mActivity,photos));		llPointGroup = (LinearLayout) parent.findViewById(R.id.il_see_point_group);		mCommSDK = CommunityFactory.getCommSDK(mActivity);		auto();		return parent;	}	@Override	protected void updataUI(Object obj) {		// TODO Auto-generated method stub	}	@Override	protected void setListener() {		// TODO Auto-generated method stub		gridView.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> parent, View view,					int position, long id) {				switch (position) {				case 0:					startActivity(new Intent(mActivity, HeartBeatListActivity.class));					break;				case 1:					Toast.makeText(mActivity, "攻城狮整拼命开发中。。。", Toast.LENGTH_SHORT).show();					break;				case 2:					Toast.makeText(mActivity, "攻城狮整拼命开发中。。。", Toast.LENGTH_SHORT).show();					break;				case 3:					Toast.makeText(mActivity, "攻城狮整拼命开发中。。。", Toast.LENGTH_SHORT).show();					break;				case 4:					Toast.makeText(mActivity, "攻城狮整拼命开发中。。。", Toast.LENGTH_SHORT).show();					break;				case 5:					Toast.makeText(mActivity, "攻城狮整拼命开发中。。。", Toast.LENGTH_SHORT).show();					break;				case 6:					Toast.makeText(mActivity, "攻城狮整拼命开发中。。。", Toast.LENGTH_SHORT).show();					break;				case 7:					//Toast.makeText(mActivity, "秀一秀", Toast.LENGTH_SHORT).show();					CommUser user = new CommUser();					user.name = TempInfo.findFirst.getUsername();					user.id = TempInfo.findFirst.getId() + "";					user.iconUrl = TempInfo.findFirst.getHead_url();					mCommSDK.loginToUmengServerBySelfAccount(mActivity.getApplicationContext(), user, new LoginListener() {						@Override						public void onStart() {						}						@Override						public void onComplete(int stCode, CommUser commUser) {							Log.d("tag", "login result is"+stCode);          //获取登录结果状态							if (ErrorCode.NO_ERROR==stCode) {								//登录成功，可以打开社区，也可以进行其他的操作，开发者自己定义								mCommSDK.openCommunity(mActivity.getApplicationContext());							}						}					});					break;				case 8:					Toast.makeText(mActivity, "攻城狮整拼命开发中。。。", Toast.LENGTH_SHORT).show();					break;				default:					break;				}			}		});		viewPager.setOnPageChangeListener(new OnPageChangeListener() {						@Override			public void onPageSelected(int position) {				// TODO Auto-generated method stub				System.out.println("当前第"+position+"张图片");				llPointGroup.getChildAt(position).setBackgroundColor(Color.BLACK);			}						@Override			public void onPageScrolled(int position, float positionOffset,					int positionOffsetPixels) {			}						@Override			public void onPageScrollStateChanged(int state) {				// TODO Auto-generated method stub							}		});	}	@Override	protected void initData() {		mBack.setVisibility(View.GONE);		mTitle.setText("发现");		mHelp.setVisibility(View.GONE);				// 初始化引导页的小圆点				for (int i = 0; i < photos.length; i++) {					View point = new View(mActivity);					point.setBackgroundResource(R.drawable.shape_point_gray);// 设置引导页默认圆点					LinearLayout.LayoutParams params = new LinearLayout.LayoutParams(							10, 10);					if (i > 0) {						params.leftMargin = 10;// 设置圆点间隔					}					point.setLayoutParams(params);// 设置圆点的大小					llPointGroup.addView(point);// 将圆点添加给线性布局				}					}			private void auto(){		// 自动轮播条显示					if (mHandler == null) {						mHandler = new Handler() {							public void handleMessage(android.os.Message msg) {								int currentItem = viewPager.getCurrentItem();								if (currentItem < photos.length - 1) {									currentItem++;								} else {									currentItem = 0;								}								viewPager.setCurrentItem(currentItem);// 切换到下一个页面								mHandler.sendEmptyMessageDelayed(0, 3000);// 继续延时3秒发消息,																			// 形成循环							};						};						mHandler.sendEmptyMessageDelayed(0, 1000);// 延时3秒后发消息					}	}	@Override	public void flushData() {		// TODO Auto-generated method stub			}}
package com.hsd.fsxasm.fragment;import java.util.ArrayList;import java.util.List;import org.xutils.DbManager;import org.xutils.x;import org.xutils.ex.DbException;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.view.View.OnClickListener;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import com.alibaba.fastjson.JSONObject;import com.google.android.gms.internal.ac;import com.handmark.pulltorefresh.library.PullToRefreshBase;import com.handmark.pulltorefresh.library.PullToRefreshBase.Mode;import com.handmark.pulltorefresh.library.PullToRefreshBase.OnRefreshListener;import com.hsd.fsxasm.R;import com.hsd.fsxasm.activity.ChooseLikeOrDisLikeActivity;import com.hsd.fsxasm.activity.MainFragmentActivity;import com.hsd.fsxasm.activity.SetFriendsConditionActivity;import com.hsd.fsxasm.adapter.FindFriendAdapter;import com.hsd.fsxasm.base.BaseFragment;import com.hsd.fsxasm.db.MDbString;import com.hsd.fsxasm.db.MDbUser;import com.hsd.fsxasm.db.MDbUtils;import com.hsd.fsxasm.domain.FindFriendsBean;import com.hsd.fsxasm.domain.UserInformationBean;import com.hsd.fsxasm.engine.NFindFriends;import com.hsd.fsxasm.global.SharedPreferencesString;import com.hsd.fsxasm.utils.FormatDate2String;import com.hsd.fsxasm.utils.LogUtil;import com.hsd.fsxasm.widget.MPullToRefreshListView;import com.hsd.fsxasm.widget.SegmentView;import com.hsd.fsxasm.widget.SegmentView.onSegmentViewClickListener;public class HomeFragment extends BaseFragment{		private int GET_MORE = 1;				private MPullToRefreshListView mListView;	private String TAG = "HomeFragment";	private NFindFriends nFindFriends;	private List<UserInformationBean> lists;	private String body;		private SegmentView segmentView;			private String currentUserPhone;	private MDbUser currentUser;	private String sex;	private FindFriendsBean findFriendsBean;	private FindFriendAdapter adapter;	@Override	protected View initViews() {		// TODO Auto-generated method stub		LogUtil.info("HomeFragment", "initViews");		mRootView = View.inflate(mActivity, R.layout.il_home, null);		mListView = (MPullToRefreshListView) mRootView.findViewById(R.id.id_foufri_list);		segmentView = (SegmentView) mRootView.findViewById(R.id.ii_segment);		segmentView.setOnClickable(1, false);		setListener();		return mRootView;	}			@Override	protected void updataUI(Object obj) {		// TODO Auto-generated method stub		mListView.onRefreshComplete();		FindFriendsBean bean = (FindFriendsBean) obj;		body = bean.getBody();		LogUtil.info(TAG + "updataUI 1", body);		lists = JSONObject.parseArray(body,UserInformationBean.class);		adapter = new FindFriendAdapter(lists, mActivity);		mListView.setAdapter(adapter);	}	@Override	protected void updataUI(Object obj, int resultCode) {		if(resultCode == GET_MORE){			mListView.onRefreshComplete();			FindFriendsBean bean = (FindFriendsBean) obj;			body = bean.getBody();			LogUtil.info(TAG + "updataUI 1", body);			List<UserInformationBean> lists2;			lists2 = JSONObject.parseArray(body,UserInformationBean.class);			lists.addAll(lists2);			//mListView.notify();			//adapter.notifyDataSetChanged()			adapter.notifyDataSetChanged();		}			}		@Override	protected void setListener() {								mListView.setMode(Mode.BOTH);						//mListView = (PullToRefreshExpandableListView) rootView.findViewById(R.id.expand_list);  		mListView.getRefreshableView().setDivider(null);  		mListView.getRefreshableView().setSelector(android.R.color.transparent);		mListView.setOnRefreshListener(new OnRefreshListener() {			@Override			public void onRefresh(PullToRefreshBase refreshView) {				// TODO Auto-generated method stub								if(refreshView.isHeaderShown()){										mListView.getLoadingLayoutProxy().setRefreshingLabel("正在刷新");					mListView.getLoadingLayoutProxy().setPullLabel("下拉刷新");					mListView.getLoadingLayoutProxy().setReleaseLabel("释放刷新");					LogUtil.info(TAG, "上啦刷新数据");					nFindFriends.findFriend(findFriendsBean);				}								if(refreshView.isFooterShown()){					mListView.getLoadingLayoutProxy().setRefreshingLabel("正在加载");					mListView.getLoadingLayoutProxy().setPullLabel("上拉加载更多");					mListView.getLoadingLayoutProxy().setReleaseLabel("释放开始加载");					LogUtil.info(TAG, "下拉加载更多");					nFindFriends.findFriend(findFriendsBean,GET_MORE);				}			}		});				mListView.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> parent, View view,					int position, long id) {				// TODO Auto-generated method stub				Intent intent = new Intent(mActivity,ChooseLikeOrDisLikeActivity.class);				Bundle bundler = new Bundle();				intent.putExtra("body",JSONObject.toJSONString(lists));				System.out.println("当前点击条目的=" + position);				intent.putExtra("position", position);				startActivity(intent);			}		});				segmentView.setOnSegmentViewClickListener(new onSegmentViewClickListener() {						@Override			public void onSegmentViewClick(View v, int position) {				// TODO Auto-generated method stub				LogUtil.info("segmentView_home", "");				if(position==2){					MainFragmentActivity activity = (MainFragmentActivity) mActivity;					activity.showFragment(activity.lists.get(4));				}			}		});	}		/**	 * 从本地数据库中获取用户资料	 */	private void getDBDate() {		currentUserPhone = getConfigInfo(SharedPreferencesString.CURRENT_USER, null);		if(currentUserPhone!=null && currentUserPhone!=""){			DbManager db = x.getDb(MDbUtils.daoConfig);			try {				currentUser = db.selector(MDbUser.class).where(MDbString.phone, "=", currentUserPhone).findFirst();			} catch (DbException e) {				e.printStackTrace();			}			if(currentUser!=null){				if(currentUser.getSex().equals("女")){					sex = "男";					System.out.println("应该推送男生");				}else{					sex = "女";					System.out.println("应该推送女生");				}			}					}else{			sex = "女";			System.out.println("默认推送女生");		}			}	@Override	protected void initData() {		// TODO Auto-generated method stub		mTitle.setVisibility(View.GONE);		mHelp.setVisibility(View.VISIBLE);		mHelp.setText("筛选");		/**		 * 打开设置择友条件界面		 */		mHelp.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				startActivityForResult(new Intent(mActivity, SetFriendsConditionActivity.class), 1);			}		});				segmentView.setVisibility(View.VISIBLE);		segmentView.setOneSelect(true);		segmentView.setTwoSelect(false);		/**		 * 进入首页推荐好友时推送好友的默认择友条件		 */		getDBDate();		findFriendsBean = new FindFriendsBean();		findFriendsBean.setAgeMin(18+"");		findFriendsBean.setAgeMax(30+"");		findFriendsBean.setHeightMin(155);		findFriendsBean.setHeightMax(200);		findFriendsBean.setSchoolName("河南师范大学");		findFriendsBean.setLocation("河南|新乡|牧野区");		findFriendsBean.setFindFriend_pageNow(1);		findFriendsBean.setFindFriend_pageSize(100);		findFriendsBean.setSex(sex);		nFindFriends = new NFindFriends(mActivity,new HttpResponseHandler());		nFindFriends.findFriend(findFriendsBean);	}		public void refreshFriends(FindFriendsBean findFriendsBean){		findFriendsBean.setFindFriend_pageNow(1);		findFriendsBean.setFindFriend_pageSize(100);		System.out.println(findFriendsBean);		nFindFriends.findFriend(findFriendsBean);	}	@Override	public void flushData() {		// TODO Auto-generated method stub			}}
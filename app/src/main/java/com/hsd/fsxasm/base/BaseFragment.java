package com.hsd.fsxasm.base;import android.app.Activity;import android.content.Context;import android.content.SharedPreferences;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.support.v4.app.Fragment;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.hsd.fsxasm.R;import com.hsd.fsxasm.global.Constructs;public abstract class BaseFragment extends Fragment{	protected Activity mActivity;		protected View mRootView;		protected TextView mTitle;		protected ImageView mBack;		protected TextView mHelp;		protected SharedPreferences sp;		@Override	public void onCreate(Bundle savedInstanceState) {		super.onCreate(savedInstanceState);				mActivity = getActivity();		sp = mActivity.getSharedPreferences("init", Context.MODE_PRIVATE);	}	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,			Bundle savedInstanceState) {		mRootView = initViews();		mTitle = (TextView) mRootView.findViewById(R.id.id_title);		mBack = (ImageView) mRootView.findViewById(R.id.id_title_back);		mHelp = (TextView) mRootView.findViewById(R.id.id_title_help);		setListener();		return mRootView;	}	@Override	public void onActivityCreated(Bundle savedInstanceState) {		super.onActivityCreated(savedInstanceState);				initData();	}		public abstract void flushData();		protected abstract View initViews();	protected abstract void setListener();		protected abstract void updataUI(Object obj);		/**	 * 更新ui操作,常常为调用了业务方法之后由handler调用,可以根据不同的结果码做对应的事情	 * @param obj	 */	protected void updataUI(Object obj ,  int resultCode){			}		protected abstract void initData();			//--------------------------------------------------------	protected class HttpResponseHandler extends Handler{		public HttpResponseHandler() {			// TODO Auto-generated constructor stub		}		@Override		public void handleMessage(Message msg) {			int id = msg.what;			Object obj = msg.obj;			int result = msg.arg1;			switch (id) {			case Constructs.NET_CANCLED:				//net_cancled();				break;			case Constructs.NET_ERROR:				Throwable ta = (Throwable) obj;				net_error(ta);					break;			case Constructs.NET_FINISHED:				//net_finished();				break;			case Constructs.NET_SUCCESSFUL:				if(result==0){					updataUI(msg.obj);				}else{					System.out.println("请求数据的response码" + result);					updataUI(msg.obj, result);				}				break;			case Constructs.NET_VISIBLE:				//当前网络不可用				break;			}		}	}			/**	 * 网络请求被取消	 */	protected void net_cancled() {		Toast.makeText(mActivity, "用户取消操作", 1).show();	}	/**	 * 网络错误	 */	protected void net_error(Throwable tb) {		tb.printStackTrace();		Toast.makeText(mActivity, "网络环境不佳,请稍后重试", 1).show();	}	/**	 * 网络请求完成	 */	protected void net_finished() {		Toast.makeText(mActivity, "net_finished", 1).show();	}		//----------------------SharedPreferences的一些实现 --------------- 		public boolean getConfigInfo(String key , boolean defValue) {			return sp.getBoolean(key, defValue);		}				public String getConfigInfo(String key , String defValue) {			return sp.getString(key, defValue);		}				public void saveConfigInfo(String key, boolean defValue) {			sp.edit().putBoolean(key, defValue).commit();		}				public void saveConfigInfo(String key, String defValue) {			sp.edit().putString(key, defValue).commit();		}		//----------------------SharedPreferences的一些实现---------------	}
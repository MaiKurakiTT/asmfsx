package com.hsd.fsxasm.engine;import org.xutils.x;import android.app.Activity;import android.content.Context;import android.os.Handler;import android.os.Message;import com.hsd.fsxasm.base.BaseCommonCallback;import com.hsd.fsxasm.base.BaseEngine;import com.hsd.fsxasm.domain.FindFriendsBean;import com.hsd.fsxasm.domain.LoginBean;import com.hsd.fsxasm.global.Constructs;import com.hsd.fsxasm.params.CertificationParams;import com.hsd.fsxasm.params.FoundFriendParams;import com.hsd.fsxasm.params.LoginParams;import com.hsd.fsxasm.utils.LogUtil;import com.hsd.fsxasm.widget.loading.ShapeLoadingDialog;public class NFindFriends extends BaseEngine{		public NFindFriends(Activity mActivity, Handler handler) {		super(mActivity, handler);		// TODO Auto-generated constructor stub	}	public void findFriend(FindFriendsBean findFriendsBean){		FoundFriendParams params = new FoundFriendParams(findFriendsBean);		params.pageNow = 1;		if(!checkNet()){			LogUtil.info("NFindFriends", "网络有问题");			return;		}else{			BaseCommonCallback<FindFriendsBean> baseCommonCallback = new BaseCommonCallback<FindFriendsBean>(mHandler){				@Override				public void onSuccess(FindFriendsBean result) {					// TODO Auto-generated method stub					Message msg = new Message();					msg.what = Constructs.NET_SUCCESSFUL;					msg.obj = result;					mHandler.sendMessage(msg);					dialog.dismiss();				}			};						dialog.show();			x.http().post(params, baseCommonCallback);		}	}			public void findFriend(FindFriendsBean findFriendsBean,final int responseCode){		FoundFriendParams params = new FoundFriendParams(findFriendsBean);		params.pageNow++;		if(!checkNet()){			LogUtil.info("NFindFriends", "网络有问题");			return;		}else{			BaseCommonCallback<FindFriendsBean> baseCommonCallback = new BaseCommonCallback<FindFriendsBean>(mHandler){				@Override				public void onSuccess(FindFriendsBean result) {					// TODO Auto-generated method stub					Message msg = new Message();					msg.what = Constructs.NET_SUCCESSFUL;					msg.obj = result;					msg.arg1 = responseCode;					mHandler.sendMessage(msg);					dialog.dismiss();				}			};						dialog.show();			x.http().post(params, baseCommonCallback);		}	}}
package com.hsd.fsxasm.activity;import java.util.Timer;import java.util.TimerTask;import java.util.regex.Matcher;import java.util.regex.Pattern;import android.content.Intent;import android.graphics.Color;import android.os.Looper;import android.os.Message;import android.text.TextUtils;import android.view.View;import android.view.ViewGroup;import android.view.View.OnClickListener;import android.widget.EditText;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import cn.smssdk.EventHandler;import cn.smssdk.SMSSDK;import com.hsd.fsxasm.R;import com.hsd.fsxasm.base.BaseActivity;import com.hsd.fsxasm.domain.RegisterBean;import com.hsd.fsxasm.engine.NRegister;public class RegisterActivity extends BaseActivity {	private RelativeLayout register;	private RelativeLayout getCode;	private EditText editUserName;	private EditText editPassWorded;	private EditText inputCode;	private TextView editGendered;	private String userName, passWord, gender;	private String[] genders = { "男", "女" };	private int[] whichs = { 0, 1 };	private TextView code;	private String student_number;	private String phCode;	private String phString;	private boolean ispressed = false;	private EventHandler eh;		private String schoolText;		@Override	protected void initData() {		// TODO Auto-generated method stub		mTitle.setText("注册");	}	@Override	protected View initView() {		// TODO Auto-generated method stub		View parents = View.inflate(mActivity, R.layout.il_register, null);		register = (RelativeLayout) parents.findViewById(R.id.but_regist_register);		editUserName = (EditText) parents.findViewById(R.id.it_register_username);		editPassWorded = (EditText) parents.findViewById(R.id.it_register_password);		getCode = (RelativeLayout) parents.findViewById(R.id.but_regist_getcode);		inputCode = (EditText) parents.findViewById(R.id.it_register_code);		code = (TextView) getCode.findViewById(R.id.ii_getcode);		student_number = getIntent().getStringExtra("student_number");		schoolText = getIntent().getStringExtra("schoolText");		initSMS();		return parents;	}	@Override	protected void updataUI(Object obj) {		// TODO Auto-generated method stub		RegisterBean reBean = (RegisterBean) obj;		int code = reBean.getResultCode();		if(code==1){			//注册成功,进入设置用户信息界面			Intent intent = new Intent(mActivity,SettingAfterRegisterActivity.class);			intent.putExtra("uuid", reBean.getUser_uuid());			intent.putExtra("phone",editUserName.getText().toString());			intent.putExtra("schoolText",schoolText);			startActivity(intent);			finish();		}else{			Toast.makeText(mActivity, reBean.getDescribe(), 0).show();		}	}	@Override	protected void setListener() {		// TODO Auto-generated method stub		SMSSDK.registerEventHandler(eh); // 注册短信回调		getCode.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				// 单机获取验证码按钮之后				if (!ispressed) {					if (isMobileNumberValid(editUserName.getText().toString())) {						if (!TextUtils.isEmpty(editUserName.getText()								.toString())) {							System.out.println("获取验证码呢");							SMSSDK.getVerificationCode("86", editUserName									.getText().toString());							phString = editUserName.getText().toString();						}					} else {						Toast.makeText(mActivity, "手机号码格式有误,请重新输入",								Toast.LENGTH_SHORT).show();						return;					}					// 如果在1分钟内无点击事件,获取验证码,并且开始计时					// 将pressed置换为true					ispressed = true;					// 改变字体颜色					code.setTextColor(Color.GRAY);					// 开启线程,更换时间					final Timer timer = new Timer();					timer.schedule(new TimerTask() {						int i = 60;						@Override						public void run() {							// TODO Auto-generated method stub							mActivity.runOnUiThread(new Runnable() {								@Override								public void run() {									// TODO Auto-generated method stub									i--;									code.setText(i + "秒后获取");									if (i == 0) {										code.setText("获取验证码");										ispressed = false;										code.setTextColor(Color.BLACK);										timer.cancel();									}								}							});						}					}, 1000, 1000);				} else {					// 如果还在点击过程中,不予理睬					Toast.makeText(mActivity, "过一会才能再次获取哦~", 1).show();				}			}		});		register.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				if (editUserName.getText().toString().isEmpty()						|| editPassWorded.getText().toString().isEmpty()) {					Toast.makeText(mActivity, "手机号或者密码不可以为空", 0).show();					return;				}else{					NRegister nRegister = new NRegister(mActivity,new HttpResponseHandler());					nRegister.register(editUserName.getText().toString(),editPassWorded.getText().toString(),student_number);				}			}			});	}	private void initSMS() {		eh = new EventHandler() {			@Override			public void afterEvent(int event, int result, Object data) {								System.out.println("服务器返回的结果" + result);				System.out.println("服务器返回的event" + event);				if (result == SMSSDK.RESULT_COMPLETE) {					// 回调完成										if (event == SMSSDK.EVENT_SUBMIT_VERIFICATION_CODE) {						// 提交验证码成功						System.out.println("验证验证码成功");						//-------						NRegister nRegister = new NRegister(mActivity,new HttpResponseHandler());						nRegister.register(editUserName.getText().toString(),editPassWorded.getText().toString(),student_number);																	} else if (event == SMSSDK.EVENT_GET_VERIFICATION_CODE) {						// 获取验证码成功						//Toast.makeText(mActivity, "驗證碼已經發送到您的手機", 0).show();						//Toast.makeText(mActivity, "验证么已经发送至您的手机,请注意查收", 0).show();					} else if (event == SMSSDK.EVENT_GET_SUPPORTED_COUNTRIES) {						// 返回支持发送验证码的国家列表					}				} else {					System.out.println("验证码错误了");					((Throwable) data).printStackTrace();				}			}		};		SMSSDK.registerEventHandler(eh); // 注册短信回调	}		/**	 * 验证手机号是否符合大陆的标准格式	 * 	 * @param mobiles	 * @return	 */	public static boolean isMobileNumberValid(String mobiles) {		Pattern p = Pattern				.compile("^((13[0-9])|(15[^4,\\D])|(18[0-9]))\\d{8}$");		Matcher m = p.matcher(mobiles);		return m.matches();	}}
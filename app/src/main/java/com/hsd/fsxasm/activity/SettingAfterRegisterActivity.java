package com.hsd.fsxasm.activity;import java.io.File;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.Date;import android.app.AlertDialog;import android.app.AlertDialog.Builder;import android.content.Intent;import android.graphics.Bitmap;import android.graphics.drawable.BitmapDrawable;import android.graphics.drawable.Drawable;import android.net.Uri;import android.os.Bundle;import android.os.Environment;import android.util.Log;import android.view.View;import android.view.ViewGroup;import android.view.View.OnClickListener;import android.widget.EditText;import android.widget.LinearLayout;import android.widget.ListView;import android.widget.PopupWindow;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import com.hsd.fsxasm.MainActivity;import com.hsd.fsxasm.R;import com.hsd.fsxasm.base.BaseActivity;import com.hsd.fsxasm.chat.DemoHelper;import com.hsd.fsxasm.domain.BaseBean;import com.hsd.fsxasm.domain.LoginBean;import com.hsd.fsxasm.domain.UserInformationBean;import com.hsd.fsxasm.engine.NLogin;import com.hsd.fsxasm.engine.NUpDateUserInfo;import com.hsd.fsxasm.engine.NUploadImage;import com.hsd.fsxasm.global.SharedPreferencesString;import com.hsd.fsxasm.global.TempInfo;import com.hsd.fsxasm.utils.DeleteFile;import com.hsd.fsxasm.utils.SettingHead;import com.hsd.fsxasm.widget.CircleImageView;import com.hyphenate.EMCallBack;import com.hyphenate.chat.EMClient;public class SettingAfterRegisterActivity extends BaseActivity {	/**	 * 姓名框	 */	private EditText nameET;	private String name;	/**	 * 性别	 */	private String sex;	/**	 * 性别框	 */	private TextView sexTextView;	private EditText phoneET;	private String phone;	private TextView locationTextView;	private TextView schoolTextView;	private TextView emotionTextView;	boolean isMonthSetted = false, isDaySetted = false;	private CircleImageView head;	private TextView birthdayTv;	private RelativeLayout setsex;	private RelativeLayout setBirthday;	private RelativeLayout setEmotionClick;	private AlertDialog dialog;	private RelativeLayout commit;	private RelativeLayout clickSetHeight;	private TextView heightTextView;	private RelativeLayout clickSetHome;	private String height;	private int heightInt;	private String home;	private String birthday;	private Date birthdayDate;	private String star;	private String school;	private String status;	private SettingHead settingHead;	private Bitmap headBT;	private String number;	private String uuid;	private String schoolText;	private static String headPath = "/sdcard/asmfsx/image/head.jpg";	@Override	protected View initView() {		View parent = View				.inflate(this, R.layout.il_settingafterregister, null);		head = (CircleImageView) parent				.findViewById(R.id.ic_settingafterregister_head);		birthdayTv = (TextView) parent				.findViewById(R.id.it_settingafterregister_birthday);		commit = (RelativeLayout) parent				.findViewById(R.id.il_settingafterregister_ok);		setBirthday = (RelativeLayout) parent				.findViewById(R.id.il_settingafterregister_setbirthday);		setsex = (RelativeLayout) parent				.findViewById(R.id.il_settingafterregister_setsex);		sexTextView = (TextView) parent				.findViewById(R.id.it_settingafterregister_sex);		clickSetHome = (RelativeLayout) parent				.findViewById(R.id.il_settingafterregister_sethome);		nameET = (EditText) parent				.findViewById(R.id.it_settingafterregister_name);		locationTextView = (TextView) parent				.findViewById(R.id.it_settingafterregister_home);		schoolTextView = (TextView) parent				.findViewById(R.id.it_settingafterregister_school);		emotionTextView = (TextView) parent				.findViewById(R.id.it_settingafterregister_emotion);		phoneET = (EditText) parent				.findViewById(R.id.it_settingafterregister_id);		phoneET.setText(getIntent().getStringExtra("phone"));		clickSetHeight = (RelativeLayout) parent				.findViewById(R.id.il_settingafterregister_setheight);		heightTextView = (TextView) parent				.findViewById(R.id.it_settingafterregister_height);		setEmotionClick = (RelativeLayout) parent				.findViewById(R.id.il_settingafterregister_setemotion);		phone = getIntent().getStringExtra("phone");		uuid = getIntent().getStringExtra("uuid");		schoolText = getIntent().getStringExtra("schoolText");		schoolTextView.setText(schoolText);		return parent;	}	@Override	protected void updataUI(Object obj) {		BaseBean baseBean = (BaseBean) obj;		if (obj instanceof LoginBean) {			Intent intent = new Intent(mActivity, MainFragmentActivity.class);			startActivity(intent);			saveConfigInfo(SharedPreferencesString.IS_LOGIN, true);			saveConfigInfo(SharedPreferencesString.CURRENT_USER, phone);			TempInfo.init(mActivity,					sp.getString(SharedPreferencesString.CURRENT_USER, ""));			System.out.println(TempInfo.findFirst);			return;		}		if (baseBean.getResultCode() == 1) {			/**			 * 设置成功，执行登录			 */			mFinish();		} else {			/**			 * 设置失败			 */			Toast.makeText(mActivity, "设置失败", 1).show();		}		DeleteFile deleteFile = new DeleteFile("sdcard/asmfsx/image/head.jpg");        deleteFile.DeleteFolder();	}	@Override	protected void initData() {		settingHead = new SettingHead(this);		headBT = settingHead.getHeadBT();	}	@Override	protected void setListener() {		// TODO Auto-generated method stub		/**		 * 设置头像		 */		head.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				showSetHeadDialog();			}		});		/**		 * 设置生日		 */		setBirthday.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				birthday = birthdayTv.getText().toString();				Intent intent = new Intent(SettingAfterRegisterActivity.this,						SetBirthdayActivity.class);				intent.putExtra("birthday", birthday);				startActivityForResult(intent, 10);			}		});		/**		 * 设置性别		 */		setsex.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				showSetSexDialog();			}		});		/**		 * 设置身高		 */		clickSetHeight.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				height = heightTextView.getText().toString();				Intent intent = new Intent(SettingAfterRegisterActivity.this,						SetHeightActivity.class);				intent.putExtra("height", height);				startActivityForResult(intent, 11);			}		});		/**		 * 设置家乡		 */		clickSetHome.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				home = locationTextView.getText().toString();				Intent intent = new Intent(SettingAfterRegisterActivity.this,						SetLocationActivity.class);				intent.putExtra("home", home);				startActivityForResult(intent, 12);			}		});		/**		 * 设置恋爱状态		 */		setEmotionClick.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				showAffectiveStateDialog();			}		});		/**		 * 提交网络		 */		commit.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				upLoadImgAndUploadUserInfo();				// requestService();			}		});	}	/**	 * 得要要上传的数据	 */	private void getUpLoadData() {		phone = phoneET.getText() + "";		name = nameET.getText() + "";		sex = sexTextView.getText() + "";		birthday = birthdayTv.getText() + "";		height = heightTextView.getText().toString().replaceAll("cm", "");		home = locationTextView.getText() + "";		school = schoolTextView.getText() + "";		status = emotionTextView.getText() + "";	}	/**	 * 上传头像并上传用户信息，如果没有设置头像则不执行	 */	private void upLoadImgAndUploadUserInfo() {		getUpLoadData();		if (name.equals("") || sex.equals("") || birthday.equals("")				|| height.equals("") || home.equals("") || school.equals("")) {			Toast.makeText(mActivity, "请完整填写信息", 0).show();		} else {			File file = new File(headPath);			if (file.exists()) {				UserInformationBean userInformationBean = new UserInformationBean();				userInformationBean.setUUID(uuid);				userInformationBean.setUser_nickname(name);				userInformationBean.setUser_sex(sex);				SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");				try {					birthdayDate = sdf.parse(birthday);				} catch (ParseException e) {					e.printStackTrace();				}				userInformationBean.setUser_birthday(birthdayDate);				userInformationBean.setUser_star(star);				heightInt = Integer.parseInt(height);				userInformationBean.setUser_height(heightInt);				userInformationBean.setUser_locality(home);				userInformationBean.setUser_school(school);				userInformationBean.setUser_state(status);				userInformationBean.setUser_phone(phone);				if (userInformationBean != null) {					NUploadImage uploadImage = new NUploadImage(mActivity,							new HttpResponseHandler());					uploadImage.uploadImageAndUpDateUserInfo(headPath,							userInformationBean, mActivity,							new HttpResponseHandler());				} else {				}			} else {				Toast.makeText(mActivity, "请设置头像", 1).show();			}		}	}	/**	 * 设置成功后直接登录并关闭此页面	 */	private void mFinish() {		NLogin login = new NLogin(mActivity, new HttpResponseHandler());		/**		 * 使用uuid登录		 */		login.login(uuid);		finish();	}	/**	 * 从其他Activity回传过来的信息	 */	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		switch (requestCode) {		case 1:			if (resultCode == RESULT_OK) {				settingHead.cropPhoto(data.getData());// 裁剪图片			}			break;		case 2:			if (resultCode == RESULT_OK) {				File temp = new File(Environment.getExternalStorageDirectory()						+ "/head.jpg");				settingHead.cropPhoto(Uri.fromFile(temp));// 裁剪图片			}			break;		case 3:			if (data != null) {				Bundle extras = data.getExtras();				headBT = extras.getParcelable("data");				if (headBT != null) {					/**					 * 上传服务器代码					 */					settingHead.setPicToView(headBT);// 保存在SD卡中					Drawable drawable = new BitmapDrawable(headBT);					head.setImageDrawable(drawable);				}			}			break;		case 10:			birthdayTv.setText(data.getStringExtra("birthday"));			star = data.getStringExtra("constellation");			break;		case 11:			heightTextView.setText(data.getStringExtra("height"));			break;		case 12:			locationTextView.setText(data.getStringExtra("home"));			break;		default:			break;		}		super.onActivityResult(requestCode, resultCode, data);	};	/**	 * 设置头像的对话框	 */	private void showSetHeadDialog() {		LinearLayout clickChoosePhoto;		LinearLayout clickTakePhoto;		AlertDialog.Builder builder = new Builder(				SettingAfterRegisterActivity.this, R.style.dialog);		View view = View.inflate(SettingAfterRegisterActivity.this,				R.layout.il_singlechoice_sethead, null);		ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(				ViewGroup.LayoutParams.MATCH_PARENT,				ViewGroup.LayoutParams.MATCH_PARENT);		view.setLayoutParams(params);		builder.setView(view);		dialog = builder.show();		dialog.setView(view, 0, 0, 0, 0);		clickChoosePhoto = (LinearLayout) view				.findViewById(R.id.il_setheaddialog_first);		clickTakePhoto = (LinearLayout) view				.findViewById(R.id.il_setheaddialog_second);		/**		 * 选择从相册找图片		 */		clickChoosePhoto.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				settingHead.choosePhoto();				dialog.dismiss();			}		});		/**		 * 调用相机拍照		 */		clickTakePhoto.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				settingHead.takePhoto();				dialog.dismiss();			}		});	}	/**	 * 设置性别对话框	 */	private void showSetSexDialog() {		LinearLayout clickBoy;		LinearLayout clickGirl;		AlertDialog.Builder builder = new Builder(				SettingAfterRegisterActivity.this, R.style.dialog);		View view = View.inflate(SettingAfterRegisterActivity.this,				R.layout.il_singlechoice_setsex, null);		ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(				ViewGroup.LayoutParams.MATCH_PARENT,				ViewGroup.LayoutParams.MATCH_PARENT);		view.setLayoutParams(params);		clickBoy = (LinearLayout) view.findViewById(R.id.il_singlechoice_boy);		clickGirl = (LinearLayout) view.findViewById(R.id.il_singlechoice_girl);		builder.setView(view);		dialog = builder.show();		dialog.setView(view, 0, 0, 0, 0);		setDialogListener(clickBoy, clickGirl);	}	/**	 * 设置性别选择器的事件监听	 */	private void setDialogListener(LinearLayout clickBoy, LinearLayout clickGirl) {		// TODO Auto-generated method stub		/**		 * 单机男		 */		clickBoy.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				// TODO Auto-generated method stub				sex = "男";				sexTextView.setText(sex);				dialog.dismiss();			}		});		// 单机女		clickGirl.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				// TODO Auto-generated method stub				sex = "女";				sexTextView.setText(sex);				dialog.dismiss();			}		});	}	/**	 * 显示设置恋爱状态的对话框并设置单击事件	 */	private void showAffectiveStateDialog() {		LinearLayout clickFirst;		LinearLayout clickSecond;		LinearLayout clickThird;		AlertDialog.Builder builder = new Builder(				SettingAfterRegisterActivity.this, R.style.dialog);		View view = View.inflate(SettingAfterRegisterActivity.this,				R.layout.il_singlechoice_setaffectivestate, null);		ViewGroup.LayoutParams params = new ViewGroup.LayoutParams(				ViewGroup.LayoutParams.MATCH_PARENT,				ViewGroup.LayoutParams.MATCH_PARENT);		view.setLayoutParams(params);		clickFirst = (LinearLayout) view				.findViewById(R.id.il_setaffectivedialog_first);		clickSecond = (LinearLayout) view				.findViewById(R.id.il_setaffectivedialog_second);		clickThird = (LinearLayout) view				.findViewById(R.id.il_setaffectivedialog_third);		builder.setView(view);		dialog = builder.show();		dialog.setView(view, 0, 0, 0, 0);		clickFirst.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				emotionTextView.setText("单身");				dialog.dismiss();			}		});		clickSecond.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				emotionTextView.setText("热恋ing");				dialog.dismiss();			}		});		clickThird.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				emotionTextView.setText("刚分手");				dialog.dismiss();			}		});	}}
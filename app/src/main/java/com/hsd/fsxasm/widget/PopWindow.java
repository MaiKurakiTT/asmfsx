package com.hsd.fsxasm.widget;import java.util.List;import com.example.popupwindow.MainActivity;import com.example.popupwindow.SignPopupWindow;import com.hsd.fsxasm.R;import com.hsd.fsxasm.utils.Px2Dp;import android.app.Activity;import android.content.Context;import android.view.Gravity;import android.view.MotionEvent;import android.view.View;import android.view.View.OnClickListener;import android.view.View.OnTouchListener;import android.view.ViewGroup;import android.widget.LinearLayout;import android.widget.PopupWindow;import android.widget.RelativeLayout;/** * 锟斤拷使锟矫革拷锟斤拷锟绞憋拷锟阶拷锟揭伙拷锟揭拷锟斤拷录锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟� *  * @Description: * @Author: easylove * @Version: V1.00 锟斤拷锟芥本锟脚ｏ拷 * @Create Date: 2015-12-2锟斤拷锟斤拷7:53:19 * @Parameters: */public class PopWindow {	private Context context;	private PopWindowListener popWindowListener;	private View popwindow_view;	private PopupWindow popwindow;	private RelativeLayout friends_popwindows_good;	private RelativeLayout friends_popwindows_remark;	private ViewGroup currentView;		public void setPopWindowListener(PopWindowListener popWindowListener) {		this.popWindowListener = popWindowListener;	}	public PopWindow(Context context,View view) {		this.context = context;		currentView = (ViewGroup) view;		initPopWindow();	}		private void initPopWindow() {		// TODO Auto-generated method stub		System.out.println("init");						popwindow_view = View				.inflate(context, R.layout.friends_popwindow, null);		friends_popwindows_good = (RelativeLayout) popwindow_view				.findViewById(R.id.friends_popwindows_good);		friends_popwindows_remark = (RelativeLayout) popwindow_view				.findViewById(R.id.friends_popwindows_remark);		popwindow = new PopupWindow(popwindow_view, Px2Dp.dip2px(context, 180),				Px2Dp.dip2px(context, 40), true);		popwindow.setAnimationStyle(R.style.AnimationFade);		popwindow_view.setOnTouchListener(new OnTouchListener() {			@Override			public boolean onTouch(View v, MotionEvent event) {				// TODO Auto-generated method stub				if (popwindow != null && popwindow.isShowing()) {					popwindow.dismiss();				}				return false;			}		});		setListener();	}	/***	 * 锟斤拷取PopupWindow实锟斤拷	 */	public PopupWindow getPopupWindow() {		return popwindow;	}	/**	 * 锟斤拷锟斤拷锟铰硷拷锟斤拷锟斤拷	 */	private void setListener() {		if (popWindowListener == null) {			System.out.println("----------------锟斤拷锟斤拷-----------------");			System.out.println("popwindowlistener没锟斤拷锟斤拷锟斤拷" + 93 + "锟斤拷");			System.out.println("----------------锟斤拷锟斤拷-----------------");		}		System.out.println("setListener");		friends_popwindows_good.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				// TODO 锟斤拷锟斤拷锟�				System.out.println("good good");				popWindowListener.setOnClickPopWindowFirstListener();				popwindow.dismiss();							}		});		friends_popwindows_remark.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				// TODO 锟斤拷锟斤拷锟斤拷锟�,锟截憋拷popwindow,锟斤拷示锟斤拷一锟斤拷锟侥憋拷锟洁辑锟斤拷 锟斤拷锟矫伙拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷息				System.out.println("remark");								SignPopupWindow signPopupWindow = new SignPopupWindow((Activity) context);				signPopupWindow.showAtLocation(currentView, Gravity.BOTTOM | Gravity.CENTER_HORIZONTAL, 0, 0);											popWindowListener.setOnClickPopWindowSecondListener();				popwindow.dismiss();			}		});	}	/**	 * 锟斤拷锟斤拷PopWindowListener锟斤拷锟铰硷拷锟斤拷锟斤拷锟斤拷	 * 	 * @Description:	 * @Author: easylove	 * @Version: V1.00 锟斤拷锟芥本锟脚ｏ拷	 * @Create Date: 2015-12-2锟斤拷锟斤拷7:53:19	 * @Parameters:	 */	public interface PopWindowListener {		/**		 * 锟斤拷锟斤拷锟斤拷一锟斤拷锟斤拷钮		 */		void setOnClickPopWindowFirstListener();		/**		 * 锟斤拷锟斤拷锟节讹拷锟斤拷锟斤拷钮		 */		void setOnClickPopWindowSecondListener();	}}